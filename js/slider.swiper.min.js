function initSwiperSlider(n){const e=$(n||".swiper-container");e.each((function(){const n=$(this);let t={grabCursor:!0,navigation:{nextEl:n.find(".swiper-button-next")[0],prevEl:n.find(".swiper-button-prev")[0]},pagination:{el:".swiper-pagination",type:"bullets",clickable:!0}};n.data("pluginOptions")&&(t=deepMerge({},t,n.data("pluginOptions"))),BX.onCustomEvent("onSetSliderOptions",[t]);const i=new Swiper(this,t);i.on("slideChange",(function(n){const e={slider:n};BX.onCustomEvent("onSlideChanges",[e])})),!1===t.init&&(i.on("init",(function(n){const i={slider:n,options:t};BX.onCustomEvent("onInitSlider",[i]),1===e.length&&BX.onCustomEvent("onSlideChanges",[{slider:n}])})),i.init()),n.data("swiper",i)}))}function deepMerge(){const n=[].slice.call(arguments);let e=n[0];const t=n.slice(1);return t.forEach((function(n){for(let t in n)if("object"==typeof n[t])for(let i in n[t])"object"!=typeof e[t]&&(e[t]={}),e[t][i]=n[t][i];else e[t]=n[t]})),e}readyDOM((function(){initSwiperSlider()}));